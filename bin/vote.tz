{ parameter (or (int %reset) (bool %vote)) ;
  storage
    (pair (pair (pair (address %admin) (bool %paused)) (pair (string %result) (nat %voteCount)))
          (map %votes address bool)) ;
  code { LAMBDA
           (pair (pair (pair (address %admin) (bool %paused)) (pair (string %result) (nat %voteCount)))
                 (map %votes address bool))
           bool
           { DUP ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; DIP { DROP } } ;
         LAMBDA
           (pair (pair (pair (address %admin) (bool %paused)) (pair (string %result) (nat %voteCount)))
                 (map %votes address bool))
           string
           { DUP ;
             PUSH string "none" ;
             SWAP ;
             CDR ;
             PUSH int 0 ;
             SWAP ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DUP ;
                    DIP 2 { DUP } ;
                    DIG 2 ;
                    CDR ;
                    CAR ;
                    DIP { DIP 4 { DUP } ; DIG 4 ; CDR } ;
                    GET ;
                    IF_NONE
                      { DUP }
                      { DIP 2 { DUP } ;
                        DIG 2 ;
                        DIP { DUP } ;
                        SWAP ;
                        PUSH bool True ;
                        SWAP ;
                        COMPARE ;
                        EQ ;
                        IF { DIP 3 { DUP } ;
                             DIG 3 ;
                             PUSH int 1 ;
                             ADD ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP { DROP 2 } }
                           { DIP 3 { DUP } ;
                             DIG 3 ;
                             PUSH int 1 ;
                             SWAP ;
                             SUB ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP { DROP 2 } } ;
                        DIP { DROP } ;
                        DIP 2 { DUP } ;
                        DIG 2 ;
                        DIP { DUP } ;
                        SWAP ;
                        DIP { DROP ; DUP } ;
                        SWAP ;
                        DIP { DROP 3 } } ;
                    DIP { DROP } ;
                    DIP 2 { DUP } ;
                    DIG 2 ;
                    DIP 3 { DUP } ;
                    DIG 3 ;
                    CAR ;
                    DIP 2 { DUP } ;
                    DIG 2 ;
                    DIP { DROP ; CDR } ;
                    PAIR ;
                    CAR ;
                    DIP { DROP 3 } } ;
             DUP ;
             DIP 2 { DUP } ;
             DIG 2 ;
             DIP { DUP } ;
             SWAP ;
             PUSH int 0 ;
             SWAP ;
             COMPARE ;
             GT ;
             IF { PUSH string "oui" }
                { DIP 3 { DUP } ;
                  DIG 3 ;
                  DIP 2 { DUP } ;
                  DIG 2 ;
                  PUSH int 0 ;
                  SWAP ;
                  COMPARE ;
                  LT ;
                  IF { PUSH string "non" } { PUSH string "egalite" } ;
                  DIP { DROP ; DUP } ;
                  SWAP ;
                  DIP { DUP } ;
                  SWAP ;
                  DIP { DROP ; DUP } ;
                  SWAP ;
                  DIP { DROP 2 } } ;
             DIP { DROP 5 } } ;
         DIP 2 { DUP } ;
         DIG 2 ;
         CDR ;
         DIP 3 { DUP } ;
         DIG 3 ;
         CAR ;
         IF_LEFT
           { DIP { DUP } ;
             SWAP ;
             DUP ;
             DIP { DUP } ;
             SWAP ;
             DIP { DIP 5 { DUP } ; DIG 5 } ;
             EXEC ;
             PUSH bool True ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { DIP { DUP } ;
                  SWAP ;
                  CDR ;
                  DIP { DIP { DUP } ; SWAP } ;
                  ITER { SWAP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         CDR ;
                         CAR ;
                         DIP { DIP { DUP } ; SWAP ; CDR ; NONE bool } ;
                         UPDATE ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         CAR ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP { DROP ; CDR } ;
                         PAIR ;
                         CAR ;
                         DIP { DROP 3 } } ;
                  DUP ;
                  DUP ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  CAR ;
                  PUSH bool False ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  CAR ;
                  PUSH nat 0 ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  DIP 4 { DUP } ;
                  DIG 4 ;
                  DIP 3 { DUP } ;
                  DIG 3 ;
                  DIP { DROP } ;
                  DIP 2 { DUP } ;
                  DIG 2 ;
                  DIP { DROP ; DUP } ;
                  SWAP ;
                  DIP { DROP ; DUP } ;
                  SWAP ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  CDR ;
                  PUSH string "" ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  DIP { DROP 5 } }
                { PUSH string "Access denied: you are not admin" ; FAILWITH } ;
             DIP { DROP } ;
             DUP ;
             NIL operation ;
             PAIR ;
             DIP { DROP 3 } }
           { DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DIP 5 { DUP } ;
             DIG 5 ;
             DIP { DUP } ;
             PAIR ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             CAR ;
             CDR ;
             PUSH bool False ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { DIP 6 { DUP } ;
                  DIG 6 ;
                  DIP { DIP { DUP } ; SWAP } ;
                  PAIR ;
                  DIP { DIP 2 { DUP } ; DIG 2 } ;
                  PAIR ;
                  DIP 2 { DUP } ;
                  DIG 2 ;
                  DIP { DIP 8 { DUP } ; DIG 8 } ;
                  EXEC ;
                  PUSH bool False ;
                  SWAP ;
                  COMPARE ;
                  EQ ;
                  IF { DIP 7 { DUP } ;
                       DIG 7 ;
                       DIP { DIP 2 { DUP } ; DIG 2 } ;
                       PAIR ;
                       DIP { DIP 3 { DUP } ; DIG 3 } ;
                       PAIR ;
                       DIP 3 { DUP } ;
                       DIG 3 ;
                       CDR ;
                       SENDER ;
                       GET ;
                       IF_NONE
                         { DIP 3 { DUP } ;
                           DIG 3 ;
                           DIP 5 { DUP } ;
                           DIG 5 ;
                           SOME ;
                           DIP { DIP 4 { DUP } ; DIG 4 ; CDR } ;
                           SENDER ;
                           UPDATE ;
                           SWAP ;
                           CAR ;
                           PAIR ;
                           DUP ;
                           DIP { DUP } ;
                           SWAP ;
                           CAR ;
                           CDR ;
                           CDR ;
                           PUSH nat 1 ;
                           ADD ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DIP 10 { DUP } ;
                           DIG 10 ;
                           DIP { DUP } ;
                           PAIR ;
                           DIP { DUP } ;
                           SWAP ;
                           CAR ;
                           CDR ;
                           CDR ;
                           PUSH nat 10 ;
                           SWAP ;
                           COMPARE ;
                           EQ ;
                           IF { DIP { DUP } ;
                                SWAP ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                CAR ;
                                PUSH bool True ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                DUP ;
                                DIP { DUP } ;
                                SWAP ;
                                DIP { DIP 13 { DUP } ; DIG 13 } ;
                                EXEC ;
                                DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                DIP 2 { DUP } ;
                                DIG 2 ;
                                DIP 2 { DUP } ;
                                DIG 2 ;
                                SWAP ;
                                CAR ;
                                PAIR ;
                                CAR ;
                                DIP { DUP } ;
                                PAIR ;
                                DIP { DROP 2 } }
                              { DUP } ;
                           DIP { DROP } ;
                           DIP 3 { DUP } ;
                           DIG 3 ;
                           DIP 3 { DUP } ;
                           DIG 3 ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DIP 2 { DUP } ;
                           DIG 2 ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DIP { DUP } ;
                           SWAP ;
                           CAR ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                           PAIR ;
                           PAIR ;
                           DIP { DUP } ;
                           SWAP ;
                           CDR ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                           SWAP ;
                           PAIR ;
                           PAIR ;
                           DIP { DROP 3 } }
                         { PUSH string "you have already voted !" ; FAILWITH } ;
                       DIP { DROP ; DUP } ;
                       SWAP ;
                       DIP { DUP } ;
                       SWAP ;
                       CAR ;
                       CAR ;
                       DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                       PAIR ;
                       PAIR ;
                       DIP { DUP } ;
                       SWAP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       PAIR ;
                       DIP { DUP } ;
                       SWAP ;
                       CAR ;
                       CDR ;
                       DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       DIP { DROP } }
                     { PUSH string "Admin can't vote" ; FAILWITH } ;
                  DIP { DROP ; DUP } ;
                  SWAP ;
                  DIP { DUP } ;
                  SWAP ;
                  CAR ;
                  CAR ;
                  DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                  PAIR ;
                  PAIR ;
                  DIP { DUP } ;
                  SWAP ;
                  CAR ;
                  CDR ;
                  DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  DIP { DUP } ;
                  SWAP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DIP { DROP } }
                { PUSH string "Contract is paused" ; FAILWITH } ;
             DIP { DROP } ;
             DUP ;
             CAR ;
             CDR ;
             NIL operation ;
             PAIR ;
             DIP { DROP 5 } } ;
         DIP { DROP 4 } } }

